# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FXxUdXjByo9mtu-iGNO_kD5wEVcLtOgb

Evaluator function for calculating (NRMSE)
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from dateutil.parser import parse
from datetime import datetime
import os
import math
processed_data_files = glob.glob("*")
final_error=0
cols_0  = ['X' + str(i) for i in range(1, 14)]
for col in cols_0:
  error=0
  count=0
  #print(col)
  for item in processed_data_files:
    df_processed_data_0 = pd.read_csv(item)
    minimum=df_processed_data_0[col+'_groundtruth_data'].min()
    maximum=df_processed_data_0[col+'_groundtruth_data'].max()
    normalizex_range=maximum-minimum
    index1 = set(df_processed_data_0[col+'_missing_data'].index[df_processed_data_0[col+'_missing_data'].apply(np.isnan)])#nan values in missing_data
    index2 = set(df_processed_data_0[col+'_groundtruth_data'].index[df_processed_data_0[col+'_groundtruth_data'].apply(np.isnan)])#nan values in groundtruth
    index=list(index1-index2)
    #print(index)
    df_index = df_processed_data_0.index.values.tolist()
    a=[df_index.index(i) for i in index]
    x=[]
    y=[]
    count+=len(a)
    for item1 in a:
      x.append(df_processed_data_0[col+'_groundtruth_data'][item1])
      y.append(df_processed_data_0['fill_mean_' + col+'_missing_data'][item1])
    x_imputed=np.asarray(x)
    y_actual=np.asarray(y)
    error+=np.square(abs(y_actual-x_imputed)/normalizex_range)
  final_error= math.sqrt(error/count)
  print(final_error)

